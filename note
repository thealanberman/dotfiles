#!/usr/bin/env bash
# v3 Credit https://github.com/dcchambers/note-keeper
# v4 2018.08.02

today="$(date +%Y%m%d)"
note_path="${HOME}/notes/${today}.md"

create_note() 
{
    if [ ! -f "${note_path}" ]; then
        mkdir -p "${HOME}/notes"
        touch "${note_path}"
        printf "%s\\n---\\n\\n" "${today}" > "${note_path}"
        printf "Created new note: %s\\n" "${note_path}"
    else
        printf "Note %s already exists.\\n" "${note_path}"
    fi
}

print_info () {
    printf "Note preview:\\n====================\\n\\n"
    head -n 8 "${note_path}"
    printf "\\n====================\\n"
    printf "Note Stats:\\n"
    stat "${note_path}"
    printf "\\n====================\\n"
    printf "File Information:\\n"
    ls -lah "${note_path}"
}

print_help () {
    printf "Usage: note [arguments]

Arguments:
  -h | --help                         Display usage guide.
  -e | --edit <DATE>                  Open a specific note for editing.
  -p | --print                        Print the contents of a note.
  -c | --create                       Create a note but don't open it for editing.
  -i | --info                         Print information about a note.\\n"
}

open_note () {
    if [[ "${EDITOR}" = *"vim"* ]]; then
        # Open Vim in insert mode.
        vim "+normal G$" +startinsert "${note_path}"
    elif [[ "${EDITOR}" = "" ]]; then
        # If no default editor, use Vim and open in insert mode.
        vim "+normal G$" +startinsert "${note_path}"
    else
        "${EDITOR}" "${note_path}"
    fi
}


if (( $# > 0 )); then
    while [[ $# -gt 0 ]]
    do
        key="$1"
        case $key in
            -e|--edit)
            printf "(e)dit is not yet implemented :(\\n"
            #shift
            #shift
            exit 0
            ;;
            -p|--print)
            cat "${note_path}"
            shift
            ;;
            -c|--create)
            create_note
            shift
            ;;
            -i|--info)
            print_info
            shift
            ;;
            -h|--help)
            print_help
            shift
            ;;
            *)
            printf "Unknown Argument: %s\\n" "${1}"
            print_help
            shift
            ;;
        esac
    done
else
    create_note
    open_note
fi
